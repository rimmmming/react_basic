{"ast":null,"code":"import _classCallCheck from \"/Users/jr1307/my-git/React/react_basic/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jr1307/my-git/React/react_basic/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jr1307/my-git/React/react_basic/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jr1307/my-git/React/react_basic/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jr1307/my-git/React/react_basic/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jr1307/my-git/React/react_basic/src/MyName.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nvar MyName =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MyName, _Component);\n\n  function MyName() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MyName);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MyName)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      number: 0,\n      message: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(MyName, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, \"\\uC548\\uB155\\uD558\\uC138\\uC694. \\uB0B4 \\uC774\\uB984\\uC740\", React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, this.props.name), \"\\uC785\\uB2C8\\uB2E4.\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, \"\\uB098\\uC774 : \", this.state.number), React.createElement(\"button\", {\n        onClick: function onClick() {\n          _this2.setState({\n            number: _this2.state.number + 1\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, \"\\uB354\\uD558\\uAE30\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"message\",\n        placeholder: \"\\uC544\\uBB34\\uB9D0\\uC774\\uB098 \\uC4F0\\uC138\\uC5EC\",\n        value: this.state.message,\n        onChange: function onChange(e) {\n          _this2.setState({\n            message: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: function onClick() {\n          alert(_this2.state.message); //경고창 띄우고 인풋값 공백으로 변경함\n\n          _this2.setState({\n            message: ''\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"\\uD655\\uC778\"));\n    }\n  }]);\n\n  return MyName;\n}(Component);\n\nMyName.defaultProps = {\n  name: \"이정림\"\n};\nMyName.propTypes = {\n  name: PropTypes.string\n};\nexport default MyName;","map":{"version":3,"sources":["/Users/jr1307/my-git/React/react_basic/src/MyName.js"],"names":["React","Component","PropTypes","MyName","state","number","message","props","name","setState","e","target","value","alert","defaultProps","propTypes","string"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;IAEMC,M;;;;;;;;;;;;;;;;;UAQFC,K,GAAQ;AACJC,MAAAA,MAAM,EAAG,CADL;AAEJC,MAAAA,OAAO,EAAG;AAFN,K;;;;;;6BAIA;AAAA;;AACJ,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sEAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKC,KAAL,CAAWC,IAAf,CAAjB,wBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAS,KAAKJ,KAAL,CAAWC,MAApB,CAFJ,EAGI;AAAQ,QAAA,OAAO,EAAG,mBAAM;AAChB,UAAA,MAAI,CAACI,QAAL,CAAc;AACVJ,YAAAA,MAAM,EAAE,MAAI,CAACD,KAAL,CAAWC,MAAX,GAAoB;AADlB,WAAd;AAGH,SAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAHJ,EAQkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARlB,EASI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,SAAxB;AAAkC,QAAA,WAAW,EAAC,mDAA9C;AAA0D,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWE,OAA5E;AAAqF,QAAA,QAAQ,EAAG,kBAACI,CAAD,EAAO;AACnG,UAAA,MAAI,CAACD,QAAL,CAAc;AACVH,YAAAA,OAAO,EAAGI,CAAC,CAACC,MAAF,CAASC;AADT,WAAd;AAGH,SAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATJ,EAcI;AAAQ,QAAA,OAAO,EACX,mBAAI;AACAC,UAAAA,KAAK,CAAC,MAAI,CAACT,KAAL,CAAWE,OAAZ,CAAL,CADA,CAC2B;;AAC3B,UAAA,MAAI,CAACG,QAAL,CAAc;AACVH,YAAAA,OAAO,EAAE;AADC,WAAd;AAGH,SANL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAdJ,CADJ;AAyBH;;;;EAtCgBL,S;;AAAfE,M,CACKW,Y,GAAe;AAClBN,EAAAA,IAAI,EAAG;AADW,C;AADpBL,M,CAIKY,S,GAAY;AACfP,EAAAA,IAAI,EAAGN,SAAS,CAACc;AADF,C;AAqCvB,eAAeb,MAAf","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass MyName extends Component{\n    static defaultProps = {\n        name : \"이정림\"\n    }\n    static propTypes = {\n        name : PropTypes.string\n    }\n\n    state = {\n        number : 0,\n        message : \"\"\n    }\n    render(){\n        return(\n            <div>\n                <div>안녕하세요. 내 이름은<b>{this.props.name}</b>입니다.</div>\n                <p>나이 : {this.state.number}</p>\n                <button onClick={ () => {\n                        this.setState({\n                            number: this.state.number + 1\n                        })  \n                    }\n                }>더하기</button><br />\n                <input type=\"text\" name=\"message\" placeholder=\"아무말이나 쓰세여\" value={this.state.message} onChange={ (e) => {\n                    this.setState({\n                        message : e.target.value\n                    })\n                } }  />\n                <button onClick={ \n                    ()=>{\n                        alert(this.state.message); //경고창 띄우고 인풋값 공백으로 변경함\n                        this.setState({\n                            message: ''\n                        });\n                    } \n                }>확인</button>\n            </div>\n        )\n    }\n}\n\nexport default MyName;"]},"metadata":{},"sourceType":"module"}